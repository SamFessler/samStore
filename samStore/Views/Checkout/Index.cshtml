@model samStore.Models.CheckoutModel

@{
    ViewBag.Title = "Checkout";


    var states = new List<SelectListItem> {
                    new SelectListItem { Value = "AL", Text = "Alabama" },
                    new SelectListItem { Value = "AK", Text = "Alaska" },
                    new SelectListItem { Value = "AZ", Text = "Arizona" },
                    new SelectListItem { Value = "AR", Text = "Arkansas" },
                    new SelectListItem { Value = "CA", Text = "California" },
                    new SelectListItem { Value = "CO", Text = "Colorado" },
                    new SelectListItem { Value = "CT", Text = "Connecticut" },
                    new SelectListItem { Value = "DE", Text = "Delaware" },
                    new SelectListItem { Value = "FL", Text = "Florida" },
                    new SelectListItem { Value = "GA", Text = "Georgia" },
                    new SelectListItem { Value = "HI", Text = "Hawaii" },
                    new SelectListItem { Value = "ID", Text = "Idaho" },
                    new SelectListItem { Value = "IL", Text = "Illinois" },
                    new SelectListItem { Value = "IN", Text = "Indiana" },
                    new SelectListItem { Value = "IA", Text = "Iowa" },
                    new SelectListItem { Value = "KS", Text = "Kansas" },
                    new SelectListItem { Value = "KY", Text = "Kentucky" },
                    new SelectListItem { Value = "LA", Text = "Louisiana" },
                    new SelectListItem { Value = "ME", Text = "Maine" },
                    new SelectListItem { Value = "MD", Text = "Maryland" },
                    new SelectListItem { Value = "MA", Text = "Massachusetts" },
                    new SelectListItem { Value = "MI", Text = "Michigan" },
                    new SelectListItem { Value = "MN", Text = "Minnesota" },
                    new SelectListItem { Value = "MS", Text = "Mississippi" },
                    new SelectListItem { Value = "MO", Text = "Missouri" },
                    new SelectListItem { Value = "MT", Text = "Montana" },
                    new SelectListItem { Value = "NC", Text = "North Carolina" },
                    new SelectListItem { Value = "ND", Text = "North Dakota" },
                    new SelectListItem { Value = "NE", Text = "Nebraska" },
                    new SelectListItem { Value = "NV", Text = "Nevada" },
                    new SelectListItem { Value = "NH", Text = "New Hampshire" },
                    new SelectListItem { Value = "NJ", Text = "New Jersey" },
                    new SelectListItem { Value = "NM", Text = "New Mexico" },
                    new SelectListItem { Value = "NY", Text = "New York" },
                    new SelectListItem { Value = "OH", Text = "Ohio" },
                    new SelectListItem { Value = "OK", Text = "Oklahoma" },
                    new SelectListItem { Value = "OR", Text = "Oregon" },
                    new SelectListItem { Value = "PA", Text = "Pennsylvania" },
                    new SelectListItem { Value = "RI", Text = "Rhode Island" },
                    new SelectListItem { Value = "SC", Text = "South Carolina" },
                    new SelectListItem { Value = "SD", Text = "South Dakota" },
                    new SelectListItem { Value = "TN", Text = "Tennessee" },
                    new SelectListItem { Value = "TX", Text = "Texas" },
                    new SelectListItem { Value = "UT", Text = "Utah" },
                    new SelectListItem { Value = "VT", Text = "Vermont" },
                    new SelectListItem { Value = "VA", Text = "Virginia" },
                    new SelectListItem { Value = "WA", Text = "Washington" },
                    new SelectListItem { Value = "WV", Text = "West Virginia" },
                    new SelectListItem { Value = "WI", Text = "Wisconsin" },
                    new SelectListItem { Value = "WY", Text = "Wyoming" }
                };


}

<h2>Checkout Page</h2>

@using (Html.BeginForm())
{
    //this runs a anti forgery hash check to make sure ip address is correct and noone has stolen form data
    @Html.AntiForgeryToken()

    if (!ViewContext.ViewData.ModelState.IsValid)
    {
        @Html.ValidationSummary(false, null, new { @class = "alert alert-danger" })
    }

    <div><p>Shipping is domestic USA only</p></div>
    <div class="form-group">
        @Html.LabelFor(x => x.ShippingAddress1, new {@class="control-label"})
        @Html.TextBoxFor(x => x.ShippingAddress1, new { @class = "form-control" })
        @Html.ValidationMessageFor(x => x.ShippingAddress1)
    </div>
    <div class="form-group">
        @Html.LabelFor(x => x.ShippingAddress2, new { @class = "control-label" })
        @Html.TextBoxFor(x => x.ShippingAddress2, new { @class = "form-control" })
    </div>
    <div class="form-group">
        @Html.LabelFor(x => x.ShippingCity, new { @class = "control-label" })
        @Html.TextBoxFor(x => x.ShippingCity, new { @class = "form-control" })
        @Html.ValidationMessageFor(x => x.ShippingCity)
    </div>
    <div class="form-group">
        @Html.LabelFor(x => x.ShippingState, new { @class = "control-label" })
        @Html.DropDownListFor(x => x.ShippingState, states, new { @class = "form-control" })
        @Html.ValidationMessageFor(x => x.ShippingState)
    </div>
    <div class="form-group">
        @Html.LabelFor(x => x.ShippingZip, new { @class = "control-label" })
        @Html.TextBoxFor(x => x.ShippingZip, new { @class = "form-control" })
        @Html.ValidationMessageFor(x => x.ShippingZip)
    </div>
    
    <div class="form-group">
        @Html.LabelFor(x => x.CreditCardNumber, new { @class = "control-label" })
        @Html.TextBoxFor(x => x.CreditCardNumber, new { @class = "form-control" })
        @Html.ValidationMessageFor(x => x.CreditCardNumber)
    </div>

    <div class="form-group">
        @Html.LabelFor(x => x.CreditCardName, new { @class = "control-label" })
        @Html.TextBoxFor(x => x.CreditCardName, new { @class = "form-control", placeholder ="Name On Card" })
        @Html.ValidationMessageFor(x => x.CreditCardName)
    </div>

    <div class="form-group">
        @Html.LabelFor(x => x.CardVerificationValue, new { @class = "control-label" })
        @Html.TextBoxFor(x => x.CardVerificationValue, new { @class = "form-control", placeholder = "CVV" })
        @Html.ValidationMessageFor(x => x.CardVerificationValue)
    </div>

    <div class="form-group">
        @Html.LabelFor(x => x.CreditCardExperation, new { @class = "control-label" })
        @Html.TextBoxFor(x => x.CreditCardExperation, new { @class = "form-control", placeholder = "CVV" })
        @Html.ValidationMessageFor(x => x.CreditCardExperation)
    </div>

    <input type="submit" value="Place Order" class="btn btn-danger" />
    <button name="validateAddress" id="ValidateAddress" class="btn btn-default">Validate Address</button>

 <!-- Modal -->
    <div class="modal fade" id="myModal" tabindex="-1" role="dialog" aria-labelledby="myModalLabel">
        <div class="modal-dialog" role="document">
            <div class="modal-content">
                <div class="modal-header">
                    <button type="button" class="close" data-dismiss="modal" aria-label="Close"><span aria-hidden="true">&times;</span></button>
                    <h4 class="modal-title" id="myModalLabel">Address Validation</h4>
                </div>
                <div class="modal-body">
                    <div class="row">
                        <div class="col-xs-12 col-sm-4">
                            <div class="well">
                                <dl class="address">
                                    <dt>@Html.LabelFor(x => x.ShippingAddress1)</dt>
                                    <dd class="address1"></dd>
                                    <dt>@Html.LabelFor(x => x.ShippingAddress2)</dt>
                                    <dd class="address2"></dd>
                                    <dt>@Html.LabelFor(x => x.ShippingCity)</dt>
                                    <dd class="city"></dd>
                                    <dt>@Html.LabelFor(x => x.ShippingState)</dt>
                                    <dd class="state"></dd>
                                    <dt>@Html.LabelFor(x => x.ShippingZip)</dt>
                                    <dd class="zip"></dd>
                                    <dt>Selected</dt>
                                    <dd><input type="radio" name="shipping" /></dd>
                                </dl>
                            </div>
                        </div>
                    </div>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-default" data-dismiss="modal">Close</button>
                    <button type="button" class="btn btn-primary" id="addressSave">Save changes</button>
                </div>
            </div>
        </div>
    </div>
}


@section Scripts{
  <script type="text/javascript">
      $(document).ready(function(){
          $('#ValidateAddress').click(function (event) {
              var street1 = $('#ShippingAddress1').val();
              var street2 = $('#ShippingAddress2').val();
              var city = $('#ShippingCity').val();
              var state = $('#ShippingState').val();
              var zip = $('#ShippingZip').val();

              $.post("/Checkout/ValidateAddress",
                  {
                      street1: street1,
                      street2: street2,
                      city: city,
                      state: state,
                      zip: zip
                  }).done(function (data) {

                      $('.address1').text(street1);
                      $('.address2').text(street2);
                      $('.city').text(city);
                      $('.state').text(state);
                      $('.zip').text(zip);

                      var addressTemplate = $('dl.address').parent().parent();
                      var addressContainer = addressTemplate.parent();

                      for (var i = 0; i < data.length; i++) {
                          var clone = addressTemplate.clone();
                          clone.find('.address1').text(data[i].DeliveryLine1);
                          clone.find('.address2').text(data[i].DeliveryLine2);
                          clone.find('.city').text(data[i].Components.CityName);
                          clone.find('.state').text(data[i].Components.State);
                          clone.find('.zip').text(data[i].Components.ZipCode + "-" + data[i].Components.Plus4Code);

                          clone.appendTo(addressContainer);
                      }

                      $('#myModal').modal('toggle');
                      console.log(data);
                  });
              event.preventDefault();
              return false;
          });

          $('#addressSave').click(function (event) {
              var selectedAddress = $('input[name=shipping]:checked').parent().parent();
              $('#ShippingAddress1').val(selectedAddress.children(".address1").text());
              $('#ShippingAddress2').val(selectedAddress.children(".address2").text());
              $('#ShippingCity').val(selectedAddress.children(".city").text());
              $('#ShippingState').val(selectedAddress.children(".state").text());
              $('#ZipCode').val(selectedAddress.children(".zip").text());
          });



          $('.input-validation-error').parents('.form-group').addClass('has-error');
          $('.field-validation-error').addClass('text-danger');

      });

    </script>
    
    }


